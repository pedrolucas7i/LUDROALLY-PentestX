import RPi.GPIO as GPIO
import subprocess
import time
import os

# Definição dos pinos GPIO para as linhas e colunas da matriz de botões (4x3)
ROW_PINS = [0, 5, 6, 19]    #  A, B, C, D
COL_PINS = [26, 1, 16]      #  E, F, G


# Configuração do modo de numeração dos pinos
GPIO.setmode(GPIO.BCM)

# Configuração das linhas como saída e das colunas como entrada com resistores pull-up
for row in ROW_PINS:
    GPIO.setup(row, GPIO.OUT, initial=GPIO.LOW)  # Começa como LOW (desativada)

for col in COL_PINS:
    GPIO.setup(col, GPIO.IN, pull_up_down=GPIO.PUD_UP)  # Ativa com resistor pull-up

# Função para escanear a matriz e identificar qual botão foi pressionado
def scan_matrix():
    for row_index, row_pin in enumerate(ROW_PINS):
        # Ativa a linha atual
        GPIO.output(row_pin, GPIO.HIGH)
        
        # Verifica o estado de cada coluna
        for col_index, col_pin in enumerate(COL_PINS):
            if GPIO.input(col_pin) == GPIO.LOW:  # Botão pressionado
                return (row_index, col_index)
        
        # Desativa a linha após verificar
        GPIO.output(row_pin, GPIO.LOW)
    
    return None  # Nenhum botão pressionado

try:
    while True:
        print(scan_matrix())  # Verifica se algum botão foi pressionado
        # Aguarda um curto período para ajustar a sensibilidade
        time.sleep(0.05)

except KeyboardInterrupt:
    # Limpa a configuração dos pinos GPIO ao encerrar o programa
    GPIO.cleanup()